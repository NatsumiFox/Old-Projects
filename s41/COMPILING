Sonic 4 in 1, due to it being so large, does not rebuild everything at all times. Afterall, it would take quite long time given how much there is to build. Instead, it uses MAKE to compile each module separately only when needed. For this, you need a MAKE program, often found with gcc and gcc-related projects such as MinGW. Each module (except the main module) will ONLY rebuild when the main source file is edited(!!!), so you need to ensure for any change to cause compilation, to edit the main source file, and save it, or alternatively include desired files within the MAKEFILE. It is also good to note, to prevent infinite regression of rebuilds, changing data around in UPMEM will not cause rebuild on S&K, and therefore will break CNZ in UPMEM if not manually updated!

The main module has all of its relevant files causing the module to be recompiled. This also includes compiled binaries of; Sonic 1, Sonic 2, Sonic 3, Sonic & Knuckles and UPMEM. Note that editing files that are not compiled into the main module do not cause rebuild to occur.

If you want to add another module, you need to include it the TARGETS line, in correct order, and then create a rule for it. This rule can be the same as the build process, but you need to keep in mind that in MAKE there are some special rules. Also keep in mind that AS does not behave well with MAKE, and you may have to do with hacky solutions to make it functional, such as I've done with Sonic 1 driver module.
